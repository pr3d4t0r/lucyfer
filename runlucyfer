#!/bin/bash

# (c) Copyright 2022 pr3d4t0r

# vim: set fileencoding=utf-8:


# +++ constants +++

LUCYFER_COMPOSE='lucyfer-compose.yaml'


# *** functions ***

die() {
    echo "$1"
    exit "$2"
} # die


assertDockerIsAvailable() {
    which docker-compose > /dev/null || die "docker-compose unavailable or not in path" 1
} # assertDockerIsAvailable


assertDockerComposeFileExists() {
    [[ -e "$LUCYFER_COMPOSE" ]] || die "$LUCYFER_COMPOSE is not present in pwd == $(pwd)" 2
} # assertDockerComposeFileExists


assertWorkspaceExists() {
    if [[ -z "$LUCYFER_WORKSPACE" ]]
    then

cat <<EOF
The LUCYFER_WORKSPACE environment variable must point at the fully qualified
path to the working directory where the user intends to store Jupyter notebooks
and data.  This script links the Jupyter jovyan user $HOME to $LUCYFER_WORKSPACE
for storing state, data, and notebooks.

From the command line, do:

export LUCYFER_WORKSPACE=/path/to/workspace/dir

Where /path/to/workspace/dir is your workspace.

EOF

        die "Please correct LUCYFER_WORKSPACE and try again" 3
    fi
} # assertWorkspaceExists


setOwnership() {
    # Set ownership to the correct user:group to avoid conflicts
    # between the internal Docker container user names and the 
    # host's.
    #
    # This script resolves to the userID:groupID of the account
    # from whence it was invoked.
    #
    # Documented method because Docker permissions and ownership
    # kinda suck.
    export BLAZEGRAPH_GID=$(id -g)
    export BLAZEGRAPH_UID=$(id -u)
    export JUPYTER_LAB_GID=$(id -g)
    export JUPYTER_LAB_UID=$(id -u)
} # setOwnership


_snuffContainer() {
    [[ -n "$1" ]] || die "container name not specified in _snuffContainer()" 5

    local container=$(docker ps -a | awk -v "containerName=$1" '$0 ~ containerName { print($NF); }')

    if [[ -n "$container" ]]
    then
        docker rm -f "$container"
    fi
} # _snuffContainer


runJupyterScienceLab() {
    _snuffContainer "lucyfer"
    _snuffContainer "kallisto"

    env | awk '/JUPYTER/ || /HOME/ || /BLAZE/' | sort
    docker-compose -f "$LUCYFER_COMPOSE" up --remove-orphans --no-recreate -d || docker-compose rm -f 
} # runJupyterScienceLab


# *** main ***

assertDockerIsAvailable
assertDockerComposeFileExists
assertWorkspaceExists
setOwnership
runJupyterScienceLab

